{"ast":null,"code":"var _jsxFileName = \"/home/jp/Documents/trybe-exercises/desenvolvimento_front-end/bloco-17-context-api-e-react-hooks/dia-2-react-hooks-usestate-e-usecontext/app-trybe-questions/src/pages/NewQuestionPage.jsx\";\nimport React, { useState, useContext } from 'react';\nimport QuestionsContext from '../context/QuestionsContext';\nimport { useHistory } from 'react-router-dom';\n\nfunction NewQuestionPage() {\n  const [question, setQuestion] = useState('');\n  const [name, setName] = useState('');\n  const {\n    addNewQuestion\n  } = useContext(QuestionsContext);\n  const {\n    history\n  } = useHistory(); //enviar o form\n\n  function handleSubmit(event) {\n    // evitar o reload da página\n    event.preventDefault(); // preparar o objeto question\n\n    const newQuestion = {\n      id: Math.random().toString().substr(2, 9),\n      // id randômico, transformado em string e que pega 9 dígitos depois da segunda casa decimal\n      name,\n      // object shorthand\n      question,\n      // object shorthand\n      claps: 0\n    }; // enviar o objeto para o estado global\n\n    addNewQuestion(newQuestion); // redireciona para a página inicial\n\n    history.push('/'); // enviar o form\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Digite a sua pergunta:\", /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"question\",\n    cols: \"30\",\n    name: \"question\" // (event) => setQuestion(event.target.value)\n    ,\n    onChange: event => setQuestion(event.target.value),\n    placeholder: \"Escreva aqui sua pergunta\",\n    rows: \"10\",\n    value: question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Digite o seu nome:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"user\",\n    name: \"name\",\n    onChange: event => setName(event.target.value),\n    placeholder: \"Escreva seu nome...\",\n    type: \"text\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Enviar\")));\n}\n\nexport default NewQuestionPage;","map":{"version":3,"sources":["/home/jp/Documents/trybe-exercises/desenvolvimento_front-end/bloco-17-context-api-e-react-hooks/dia-2-react-hooks-usestate-e-usecontext/app-trybe-questions/src/pages/NewQuestionPage.jsx"],"names":["React","useState","useContext","QuestionsContext","useHistory","NewQuestionPage","question","setQuestion","name","setName","addNewQuestion","history","handleSubmit","event","preventDefault","newQuestion","id","Math","random","toString","substr","claps","push","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,eAAT,GAA2B;AAEzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAqBR,UAAU,CAACC,gBAAD,CAArC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,UAAU,EAA9B,CALyB,CAOzB;;AACA,WAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AACAA,IAAAA,KAAK,CAACC,cAAN,GAF2B,CAI3B;;AACA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,GAAyBC,MAAzB,CAAgC,CAAhC,EAAkC,CAAlC,CADc;AACwB;AAC1CZ,MAAAA,IAFkB;AAEZ;AACNF,MAAAA,QAHkB;AAGR;AACVe,MAAAA,KAAK,EAAE;AAJW,KAApB,CAL2B,CAY3B;;AACAX,IAAAA,cAAc,CAACK,WAAD,CAAd,CAb2B,CAe3B;;AACAJ,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb,EAhB2B,CAiB3B;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAGV,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,IAAI,EAAC,UAHP,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAGC,KAAD,IAAWN,WAAW,CAACM,KAAK,CAACU,MAAN,CAAaC,KAAd,CALlC;AAME,IAAA,WAAW,EAAC,2BANd;AAOE,IAAA,IAAI,EAAC,IAPP;AAQE,IAAA,KAAK,EAAGlB,QARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAcE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAGO,KAAD,IAAWJ,OAAO,CAACI,KAAK,CAACU,MAAN,CAAaC,KAAd,CAH9B;AAIE,IAAA,WAAW,EAAC,qBAJd;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,KAAK,EAAGhB,IANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,eAyBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,CADF,CADF;AA+BD;;AAED,eAAeH,eAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport QuestionsContext from '../context/QuestionsContext';\nimport { useHistory } from 'react-router-dom';\n\nfunction NewQuestionPage() {\n\n  const [question, setQuestion] = useState('');\n  const [name, setName] = useState('');\n  const { addNewQuestion } = useContext(QuestionsContext);\n  const { history } = useHistory();\n\n  //enviar o form\n  function handleSubmit(event) {\n    // evitar o reload da página\n    event.preventDefault();\n\n    // preparar o objeto question\n    const newQuestion = {\n      id: Math.random().toString().substr(2,9), // id randômico, transformado em string e que pega 9 dígitos depois da segunda casa decimal\n      name, // object shorthand\n      question, // object shorthand\n      claps: 0,\n    }\n\n    // enviar o objeto para o estado global\n    addNewQuestion(newQuestion);\n\n    // redireciona para a página inicial\n    history.push('/')\n    // enviar o form\n  }\n\n  return (\n    <section className=\"question-section\">\n      <form onSubmit={ handleSubmit }>\n        <label htmlFor=\"question\">\n          Digite a sua pergunta:\n          <textarea \n            id=\"question\"\n            cols=\"30\"\n            name=\"question\"\n            // (event) => setQuestion(event.target.value)\n            onChange={(event) => setQuestion(event.target.value)}\n            placeholder=\"Escreva aqui sua pergunta\"\n            rows=\"10\"\n            value={ question }\n          />\n        </label>\n        <label htmlFor=\"user\">\n          Digite o seu nome:\n          <input\n            id=\"user\"\n            name=\"name\"\n            onChange={(event) => setName(event.target.value)}\n            placeholder=\"Escreva seu nome...\"\n            type=\"text\"\n            value={ name }\n          />\n        </label>\n        <button type=\"submit\">Enviar</button>\n      </form>\n    </section>\n  );\n}\n\nexport default NewQuestionPage;"]},"metadata":{},"sourceType":"module"}